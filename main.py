import os
import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters

# ЁЯФС Environment variables
BOT_TOKEN = os.getenv("BOT_TOKEN")
ACR_API_KEY = os.getenv("ACR_API_KEY")
ACR_HOST = "identify-eu-west-1.acrcloud.com"  # Default region

async def start(update: Update, context):
    await update.message.reply_text(
        "ЁЯСЛ рж╣рзНржпрж╛рж▓рзЛ! ржЖржорж┐ Song Finder Bot ЁЯО╢\n"
        "ржЖржорж╛ржХрзЗ ржпрзЗржХрзЛржирзЛ ржнрж┐ржбрж┐ржУ рж▓рж┐ржВржХ ржкрж╛ржарж╛ржУ (ржпрзЗржоржи YouTube, TikTok, Instagram), ржЖржорж┐ ржмрж▓рзЗ ржжрзЗржм ржХрзЛржи ржЧрж╛ржиржЯрж╛ ржмрзНржпржмрж╣рж╛рж░ рж╣ржпрж╝рзЗржЫрзЗ!"
    )

async def find_song(update: Update, context):
    user_msg = update.message.text
    await update.message.reply_text("ЁЯФН ржЧрж╛ржи ржЦрзЛржБржЬрж╛ рж╣ржЪрзНржЫрзЗ... ржПржХржЯрзБ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзЛ ЁЯОз")

    # ржбрзЗржорзЛ рж╣рж┐рж╕рзЗржмрзЗ ржЖржорж░рж╛ рж╢рзБржзрзБ ржЯрзЗржХрзНрж╕ржЯ show ржХрж░ржЫрж┐, ржЕржбрж┐ржУ extract ржХрж░рж╛рж░ ржХрзЛржб ржЪрж╛ржЗрж▓рзЗ ржкрж░рзЗ ржпрзБржХрзНржд ржХрж░рж╛ ржпрж╛ржмрзЗ
    # ржПржЦрж╛ржирзЗ рж╕рж░рж╛рж╕рж░рж┐ API рждрзЗ ржкрж╛ржарж╛ржирзЛ ржпрзЗрждрзЗ ржкрж╛рж░рзЗ ржпржжрж┐ рждрзЛржорж╛рж░ ржХрж╛ржЫрзЗ audio bytes ржерж╛ржХрзЗ

    # For now:
    await update.message.reply_text(
        "тЪая╕П ржмрж░рзНрждржорж╛ржирзЗ demo ржорзЛржб ржЪрж▓ржЫрзЗред Audio analysis ржХрзЛржб ржпрзБржХрзНржд ржХрж░рж▓рзЗ ржЖржорж┐ ржЧрж╛ржи ржЪрж┐ржирзЗ ржлрзЗрж▓ржм!"
    )

async def help_command(update: Update, context):
    await update.message.reply_text("тД╣я╕П рж╢рзБржзрзБ ржнрж┐ржбрж┐ржУ рж▓рж┐ржВржХ ржкрж╛ржарж╛ржУ, ржЖржорж┐ ржмрж▓рзЗ ржжрзЗржм ржХрзЛржи ржЧрж╛ржи ржЪрж▓ржЫрзЗ ЁЯО╢")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, find_song))

    print("ЁЯдЦ Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()
